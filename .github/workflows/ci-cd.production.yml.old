name: CI/CD Pipeline (Production)

on: 
  push: 
    branches:
      - production

jobs:
  uploadAssets:
    name: CD Pipeline (Upload assets to S3)
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - uses: actions/checkout@master

      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run:
          npm install

      - name: Build
        run:
          npm run build:front

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}} 
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: Deploy dashboard to bucket
        run: aws s3 sync ./public/assets s3://${{ secrets.AWS_BUCKET }}/assets/

      - name: Invalidate dashboard cloudfront
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }} --paths "/assets/*"

  deploy:
    name: CD Pipeline (Deploy)
    runs-on: ubuntu-latest
    needs: uploadAssets
    steps:
      - name: Checkout source code
        uses: actions/checkout@v1

      - name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'

      - name: 'Get Previous tag'
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time

      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: nftvaluations-production-application
          environment_name: nftvaluations-production
          version_label: "${{ steps.previoustag.outputs.tag }}-${{ steps.format-time.outputs.replaced }}"
          region: ${{ secrets.AWS_REGION }}
          wait_for_deployment: false
          deployment_package: deploy.zip